---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/signup":
    post:
      summary: Sign up
      tags:
      - Sign up
      parameters: []
      responses:
        '200':
          description: Signed up successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  name:
                    type: string
                required:
                - id
                - email
                - name
        '422':
          description: Something went wrong
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
  "/login":
    post:
      summary: Login
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: You are logged in.
        '401':
          description: Invalid login credentials.
        '404':
          description: User not found.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
  "/logout":
    delete:
      summary: Logout
      tags:
      - Logout
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: You are logged out.
        '401':
          description: Invalid token.
  "/api/v1/courses":
    get:
      summary: Retrieve all courses
      tags:
      - Courses
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Get courses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    photo:
                      type: string
                    teacher:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                      format: float
                  required:
                  - id
                  - name
                  - description
                  - photo
                  - teacher
                  - price
    post:
      summary: Create a course
      tags:
      - Courses
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Course created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  photo:
                    type: string
                  teacher:
                    type: string
                required:
                - id
                - name
                - description
                - price
                - photo
                - teacher
        '401':
          description: You are not authorized to create a course.
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                      format: float
                    photo:
                      type: string
                    teacher:
                      type: string
                  required:
                  - name
                  - description
                  - price
                  - photo
                  - teacher
              required:
              - course
  "/api/v1/courses/{id}":
    get:
      summary: Retrieve a specific course
      tags:
      - Courses
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  photo:
                    type: string
                  teacher:
                    type: string
                required:
                - id
                - name
                - description
                - price
                - photo
                - teacher
        '404':
          description: Not Found
    delete:
      summary: Delete a course
      tags:
      - Courses
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Course deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '401':
          description: You are not authorized to delete a course.
        '404':
          description: Not Found
  "/api/v1/reservations":
    post:
      summary: Create a reservation
      tags:
      - Reservations
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: Reservation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  course_id:
                    type: integer
                  city:
                    type: string
                  date:
                    type: integer
                  course:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      photo:
                        type: string
                      teacher:
                        type: string
                      user_id:
                        type: integer
                      description:
                        type: string
                      price:
                        type: number
                        format: float
                    required:
                    - id
                    - name
                required:
                - id
                - user_id
                - course_id
                - city
                - date
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation:
                  type: object
                  properties:
                    course_id:
                      type: integer
                    date:
                      type: string
                    city:
                      type: string
                    user_id:
                      type: integer
                  required:
                  - course_id
                  - date
                  - city
                  - user_id
              required:
              - reservation
    get:
      summary: List reservations
      tags:
      - Reservations
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: List of reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    course_id:
                      type: integer
                    city:
                      type: string
                    date:
                      type: integer
                    course:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        photo:
                          type: string
                        teacher:
                          type: string
                        user_id:
                          type: integer
                        description:
                          type: string
                        price:
                          type: number
                          format: float
                      required:
                      - id
                      - name
                  required:
                  - id
                  - user_id
                  - course_id
                  - city
                  - date
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: vecsschool.onrender.com
